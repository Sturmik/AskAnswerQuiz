////////////////////////////////////////////////////////////

// Работайте с программой в x86 разрядности для совместимости с бинарными файлами

// Если вы используете мои сохранения, то чтобы получить доступ в админ.контроль введите следующее: login - testadmin | password - 343049
// В самом окне работы администратора вы сможете поменять эти данные на удобные для вас

////////////////////////////////////////////////////////////

// ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Описание механики работы программы ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? 

// Не смотря на название, интерфейс будет основной отправной точкой к остальным функциям программы
// Он будет содержать лист пользователей и категорий

// Первое, что будет делать интерфейс - это загрузка данных о всех пользователях (без статистики)

// Второе, что будет делать интерфейс - это позволять зарегистрировать пользователя, войти в уже созданный аккаунт и продолжить работу уже с ним.
// Целью служило избегание ненужной перегрузки программы выгрузкой всех пользователей и их данных, тестов (со статистикой прохождения тестов), мы будем хранить их информацию
// в отдельной папке. Информация будет храниться в bin. файлах с цифровыми значениями в названии (чтобы скрыть принадлежность файла к некому пользователю)
// У каждого профиля есть уникальный идентификатор, который и поможет найти нужный файл в папке, о которой я писал ранее.
// Такой подход был выбран с целью избегания загрузки большых объемов данных и также сокрытие информации от лишнего внимания

// Аналогично дела обстоят и для категорий

// Третье, что будет делать интерфейс - это передавать управление пользователю или администратору.
// Отсюда будет производиться прохождение тестов, просмотр статистики и работа администрации.
 
///////////////////////////////////// Связь файлов /////////////////////////////////////

// Программа работает с папкой "Data", что находиться с ней в одном файле.
// Внутри "Data" находяться две папки: "Sections", "UserData"

// В последней храниться информация о пользователях. В "UserData.bin" находятся зашифрованые логины, пароли и ID номера пользователей.
// ID номера позволяют пользователям ссылать на их дополнительные файлы (Ex: 34295.bin), в которых храниться доп.информация и пользовательская статистика прохождения тестов.

// В папке "Sections" хранится опять же два файла, один "Sections.bin" и папка "Tests". В бинарном файле храняться названия разделов и ID, что ссылается на 
// некий бинарный файл что хранится в папке "Tests", в котором находится лист тестов (Название теста, ID теста), что связаны с разделом из "Sections.bin". 
// И листы тестов в свою очередь ссылаються на файл, что храниться с ними ("Exams"), в котором храняться сами тесты для прохождения.

// Попытка визуализации иерархии файлов:

//                        ____________________| Data |_____________________
//                       |							    			       |
//                   |Sections|				                           |UserData|
//             __________|__________                  	         __________|__________
//            |                     |                           |                     |  
// |SectionsData.bin|            |Tests|                  |UserData.bin|         |125215.bin|, ...			// " ... " - означает, что подобных файлов может быть много
//                        __________|__________ 
//                       |                     |
//                 |31452.bin|, ...         |Exams|
//                                             |
//                                       |314521157.bin|, ...		// |31452.bin| и |314521157.bin| - последний файл имеет такие же числа в начале "31452", что и первый.
																	// Дело в том, что первый файл хранит в себе категорию (лист тестов) и ID номера тестов этой категории
																	// И вот один из таких тестов заимствует эти цифры для того чтобы избежать совпадения
																	// значения с другими бинарными файлами из других категорий (предварительно номер сверяется с другими тестами в листе).


// Пример работы цепочки в виде вызовов функций и параллельной работы файлов:

// Login()                       ->	UserMenu()                ->  PassTest(list UserStat)       ->  Sections::PassTest(list UserStat) -> Test::PassTest() - тест вернет статистику UserStat-у  -> Question::Pass()
// Data\\UserData\\UserData.bin  ->	Data\\UserData\\2145.bin   |  Data\\Sections\\Sections.bin  ->  Data\\Sections\\Tests\\31452.bin  -> Data\\Sections\\Tests\\Exam\\314521157.bin                  

//                                         /|\                                                                                                         |
//                                          |__________________________________________________________________________________________________________|
//											 Статистика прохождение теста возращается обратно пользователю и тот добавляет её себе в лист результатов

// ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?

// Структура, что будет хранить информацию о категориях